{"remainingRequest":"/Users/benedikt/custom/environment/example-client-js/node_modules/babel-loader/lib/index.js!/Users/benedikt/custom/environment/example-client-js/node_modules/eslint-loader/index.js??ref--18-0!/Users/benedikt/custom/environment/example-client-js/src/protobuf.js","dependencies":[{"path":"/Users/benedikt/custom/environment/example-client-js/src/protobuf.js","mtime":1525281622930},{"path":"/Users/benedikt/custom/environment/example-client-js/package.json","mtime":1525284903126},{"path":"/Users/benedikt/custom/environment/example-client-js/node_modules/cache-loader/dist/cjs.js","mtime":1525259452936},{"path":"/Users/benedikt/custom/environment/example-client-js/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/benedikt/custom/environment/example-client-js/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\nexport default {\n  initialized: false,\n  packets: {},\n  packetIds: {\n    'ConnectUserRequest': 5,\n    'ConnectUserResponse': 6,\n    'PlaySoundRequest': 9,\n    'PlaySoundResponse': 10,\n    'StopSoundRequest': 11,\n    'StopSoundResponse': 12,\n    'UpdateSoundVolumeRequest': 13,\n    'UpdateSoundRateRequest': 14\n  },\n  init: function init(callback) {\n    var _this = this;\n\n    var protobuf = require(\"protobufjs\");\n\n    var packetTypes = {\n      'connect_user': ['ConnectUserRequest', 'ConnectUserResponse'],\n      'play_sound': ['PlaySoundRequest', 'PlaySoundResponse'],\n      'stop_sound': ['StopSoundRequest', 'StopSoundResponse'],\n      'update_sound_volume': ['UpdateSoundVolumeRequest'],\n      'update_sound_rate': ['UpdateSoundRateRequest']\n    };\n    var packets = {};\n\n    var _loop = function _loop(i) {\n      var done = false;\n      protobuf.load('protocol/' + Object.keys(packetTypes)[i] + '.proto', function (err, root) {\n        done = true;\n        var types = packetTypes[Object.keys(packetTypes)[i]];\n\n        for (var j = 0; j < types.length; j++) {\n          packets[types[j]] = root.lookupType(types[j]);\n        }\n\n        if (i === Object.keys(packetTypes).length - 1) {\n          _this.packets = packets;\n          _this.initialized = true;\n          callback();\n        }\n      });\n    };\n\n    for (var i = 0; i < Object.keys(packetTypes).length; i++) {\n      _loop(i);\n    }\n  },\n  serialize: function serialize(type, payload) {\n    var messageType = this.packets[type];\n    var message = messageType.create(payload);\n    var messageBytes = messageType.encode(message).finish();\n    var result = new Uint8Array(messageBytes.length + 1);\n    result.set([this.packetIds[type]], 0);\n    result.set(messageBytes, 1);\n    return result;\n  },\n  deserialize: function deserialize(data) {\n    var typeId = data[0];\n    var type = null;\n\n    for (var i = 0; i < Object.keys(this.packetIds).length; i++) {\n      if (typeId === this.packetIds[Object.keys(this.packetIds)[i]]) {\n        type = Object.keys(this.packetIds)[i];\n      }\n    }\n\n    if (type === null) return null;\n    var message = data.slice(1, data.length);\n    var messageType = this.packets[type];\n    return {\n      type: type,\n      payload: messageType.toObject(messageType.decode(message))\n    };\n  }\n};",{"version":3,"sources":["src/protobuf.js"],"names":["initialized","packets","packetIds","init","callback","protobuf","require","packetTypes","i","done","load","Object","keys","err","root","types","j","length","lookupType","serialize","type","payload","messageType","message","create","messageBytes","encode","finish","result","Uint8Array","set","deserialize","data","typeId","slice","toObject","decode"],"mappings":"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","sourceRoot":"/Users/benedikt/custom/environment/example-client-js","sourcesContent":["export default {\n\n  initialized: false,\n\n  packets: {},\n\n  packetIds: {\n    'ConnectUserRequest': 5,\n    'ConnectUserResponse': 6,\n    'PlaySoundRequest': 9,\n    'PlaySoundResponse': 10,\n    'StopSoundRequest': 11,\n    'StopSoundResponse': 12,\n    'UpdateSoundVolumeRequest': 13,\n    'UpdateSoundRateRequest': 14\n  },\n\n  init (callback) {\n    const protobuf = require(\"protobufjs\")\n\n    const packetTypes = {\n      'connect_user': [\n        'ConnectUserRequest',\n        'ConnectUserResponse'\n      ],\n      'play_sound': [\n        'PlaySoundRequest',\n        'PlaySoundResponse'\n      ],\n      'stop_sound': [\n        'StopSoundRequest',\n        'StopSoundResponse'\n      ],\n      'update_sound_volume': [\n        'UpdateSoundVolumeRequest'\n      ],\n      'update_sound_rate': [\n        'UpdateSoundRateRequest'\n      ]\n    }\n\n    const packets = {}\n\n    for (let i = 0; i < Object.keys(packetTypes).length; i++) {\n      let done = false\n\n      protobuf.load('protocol/' + Object.keys(packetTypes)[i] + '.proto', (err, root) => {\n        done = true\n\n        const types = packetTypes[Object.keys(packetTypes)[i]]\n        for (let j = 0; j < types.length; j++) {\n          packets[types[j]] = root.lookupType(types[j])\n        }\n\n        if (i === Object.keys(packetTypes).length - 1) {\n          this.packets = packets\n          this.initialized = true\n          callback()\n        }\n      })\n    }\n  },\n\n  serialize (type, payload) {\n    const messageType = this.packets[type]\n    const message = messageType.create(payload)\n    const messageBytes = messageType.encode(message).finish()\n\n    const result = new Uint8Array(messageBytes.length + 1)\n    result.set([this.packetIds[type]], 0)\n    result.set(messageBytes, 1)\n\n    return result\n  },\n\n  deserialize (data) {\n    const typeId = data[0]\n    let type = null\n\n    for (let i = 0; i < Object.keys(this.packetIds).length; i++) {\n      if (typeId === this.packetIds[Object.keys(this.packetIds)[i]]) {\n        type = Object.keys(this.packetIds)[i]\n      }\n    }\n\n    if (type === null) return null\n\n    const message = data.slice(1, data.length)\n    const messageType = this.packets[type]\n\n    return {\n      type: type,\n      payload: messageType.toObject(messageType.decode(message))\n    }\n  }\n}\n"]}]}